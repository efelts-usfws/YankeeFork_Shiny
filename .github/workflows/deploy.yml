name: Update and Deploy Shiny App

on:
  schedule:
    - cron: '0 9 * * *'  # runs daily at 9 AM UTC (2 AM PDT)
  workflow_dispatch:      # allows manual trigger in GitHub Actions UI

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Check out repo
        uses: actions/checkout@v3
        
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
          build-essential \
          libssl-dev \
          libcurl4-openssl-dev \
          libxml2-dev \
          libcppunit-dev


        
      - name: Add geospatial dependencies
        run: |
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libgdal-dev \
            libgeos-dev \
            libproj-dev \
            libudunits2-dev \
            libpng-dev


      - name: üì¶ Set up R
        uses: r-lib/actions/setup-r@v2
        
      - name: Ensure cache directories exist
        run: |
          mkdir -p "$HOME/.local/share/renv"
          mkdir -p "$HOME/.cache/R/renv"
        
      - name: Cache R packages 
        uses: actions/cache@v3 
        with: 
          path: $HOME/.local/share/renv
                $HOME/.cache/R/renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }} 
          restore-keys: | 
            ${{ runner.os }}-renv-

      - name: Test digest install (debug)
        run: |
          Rscript -e 'install.packages("digest")'
      
      - name: Restore R environment
        run: |
          Rscript -e 'install.packages("renv", repos="https://cloud.r-project.org")'
          Rscript -e 'renv::restore()'

      
      - name: üõ†Ô∏è Run data update script
        run: Rscript ptagis_processing.R
        
      - name: üêõ Check for data/ contents
        run: |
         echo "=== Does data/ exist? ==="
         if [ -d "data" ]; then echo "Yes, data/ exists."; else echo "No, data/ does NOT exist."; fi
         echo ""
         echo "=== Listing contents of data/ ==="
         ls -la data || echo "data/ folder is missing or empty"



      - name: üöÄ Deploy to shinyapps.io
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: |
          Rscript -e 'rsconnect::setAccountInfo(name = "elifelts", token = Sys.getenv("SHINYAPPS_TOKEN"), secret = Sys.getenv("SHINYAPPS_SECRET"))'
          Rscript -e 'rsconnect::deployApp(appDir = ".", forceUpdate = TRUE, appFiles = list.files(".", recursive=TRUE))'
